services:
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    env_file:
      - ./backend/.env
    environment:
      - KEYCLOAK_USER=admin          # Set your desired admin username
      - KEYCLOAK_PASSWORD=admin      # Set your desired admin password
      - KEYCLOAK_ADMIN=admin         # Set admin username
      - KEYCLOAK_ADMIN_PASSWORD=admin  # Set admin password
      - KC_HTTP_ENABLED=true
      - KC_CORS=true                  # Enable CORS
      - KC_CORS_ALLOWED_ORIGINS=*     # Allow all origins (adjust if needed for security)
    ports:
      - "8080:8080"
    networks:
      - keycloak-net
    restart: always
    volumes:
      - keycloak-data:/opt/keycloak/data
      - ./backend/keycloak.conf:/opt/keycloak/conf/keycloak.conf
    command:
      - start-dev
      - --import-realm
    depends_on:
      - postgres

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "4200:80"  # Maps Angular app to port 4200 externally
    networks:
      - keycloak-net
    depends_on:
      - postgres
      - backend
      - keycloak

  backend:
    build:
      context: ./backend  # Use current directory (backend/), where Dockerfile is
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - ./backend/.env
    depends_on:
      - postgres
      - keycloak
    volumes:
      - ./backend/src:/usr/src/app  # Mount src/ from current directory (backend/src)
      - ./backend/node_modules:/usr/src/app/node_modules
      - ./backend/keycloak.json:/usr/src/app/keycloak.json
    restart: always  # Ensure backend restarts in case of failure
    networks:
      - keycloak-net

  postgres:
    image: postgres:15
    restart: always
    env_file:
      - ./backend/.env
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - keycloak-net  # Ensure Postgres is on the same network

volumes:
  keycloak-data:
  postgres_data:


networks:
  keycloak-net:  # Define the network here
    driver: bridge  # Default bridge driver for Docker network